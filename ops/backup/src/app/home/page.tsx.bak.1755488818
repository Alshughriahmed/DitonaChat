"use client";
import React, { useState } from "react";
import { useRouter } from "next/navigation";

type Gender = "female" | "male" | "couple" | "lgbtq";

const GENDERS: { value: Gender; label: string; symbol: string }[] = [
  { value: "female", label: "Female", symbol: "♀" },
  { value: "male", label: "Male", symbol: "♂" },
  { value: "couple", label: "Couple", symbol: "❤" },
  { value: "lgbtq", label: "LGBTQ+", symbol: "🏳️‍🌈" },
];

export default function HomePage() {
  const router = useRouter();
  const [gender, setGender] = useState<Gender | "">("");
  const [ageOK, setAgeOK] = useState(false);
  const canStart = gender !== "" && ageOK;
  const start = () => { if (canStart) router.push("/chat"); };

  return (
    <main style={{ minHeight:"100dvh", position:"relative", overflow:"hidden", color:"#fff" }}>
      {/* الخلفية */}
      <img
        src="/landing/hero.webp"
        alt=""
        aria-hidden
        style={{
          position:"absolute", inset:0, width:"100%", height:"100%",
          objectFit:"cover", filter:"brightness(.62)"
        }}
      />
      <div
        aria-hidden
        style={{
          position:"absolute", inset:0, zIndex:1,
          background:
            "radial-gradient(1200px 600px at 50% 10%, rgba(255,0,80,.22), transparent 60%), radial-gradient(1200px 600px at 50% 100%, rgba(0,0,0,.6), rgba(0,0,0,.82))"
        }}
      />

      {/* هيدر مثبت أعلى الصفحة: +18 و Log in / Sign in */}
      <div
        style={{
          position:"absolute", top:0, left:0, right:0, zIndex:1000,
          display:"flex", alignItems:"center", justifyContent:"space-between",
          padding:"12px 20px",
          background:"linear-gradient(180deg, rgba(0,0,0,.55), rgba(0,0,0,0))",
          borderBottom:"1px solid rgba(255,255,255,.12)"
        }}
      >
        <div style={{ display:"flex", alignItems:"center", gap:10 }}>
          <div style={{ fontSize:22, fontWeight:900, letterSpacing:.4 }}>Ditonachat</div>
          <span
            title="+18"
            style={{
              background:"#ff1744", color:"#fff", fontSize:12, fontWeight:800,
              borderRadius:999, padding:"3px 8px", border:"1px solid rgba(255,255,255,.25)"
            }}
          >+18</span>
        </div>
        <nav style={{ display:"flex", alignItems:"center", gap:12 }}>
          <a href="/api/auth/signin" style={linkBtn("ghost")}>Log in</a>
          <a href="/api/auth/signin" style={linkBtn("solid")}>Sign in</a>
        </nav>
      </div>

      {/* الكارت المركزي */}
      <section style={{ position:"relative", zIndex:2, display:"grid", placeItems:"center", padding:"110px 20px 32px" }}>
        <div
          style={{
            width:"min(620px, 92vw)", background:"rgba(18,18,18,0.72)",
            border:"1px solid rgba(255,255,255,0.12)", backdropFilter:"blur(10px)",
            borderRadius:16, padding:"22px 18px", boxShadow:"0 10px 40px rgba(0,0,0,.45)"
          }}
        >
          <div style={{ textAlign:"center", marginBottom:14 }}>
            <h1 style={{ margin:0, fontSize:30, fontWeight:900, letterSpacing:.4 }}>
              Welcome to <span style={{ color:"#ff4d6d" }}>Ditona</span> Video Chat
            </h1>
            <div style={{ marginTop:6, fontSize:18, fontWeight:700, opacity:.95 }}>
              🔥 Unleash your wild side 🔥
            </div>
          </div>

          <div style={{ display:"grid", gap:12 }}>
            <label style={{ fontSize:14, opacity:.9 }}>Your gender</label>
            <div style={{ position:"relative" }}>
              <select
                value={gender}
                onChange={(e)=>setGender(e.target.value as Gender | "")}
                style={selectStyle}
                aria-label="Select your gender"
              >
                <option value="" disabled>— Select —</option>
                {GENDERS.map(g => <option key={g.value} value={g.value}>{g.symbol} {g.label}</option>)}
              </select>
              <span aria-hidden style={{ position:"absolute", right:10, top:"50%", transform:"translateY(-50%)", pointerEvents:"none", opacity:.8 }}>▾</span>
            </div>

            <label style={{ display:"flex", alignItems:"center", gap:10, fontSize:14 }}>
              <input type="checkbox" checked={ageOK} onChange={(e)=>setAgeOK(e.target.checked)} style={{ width:18, height:18 }} />
              I confirm I am 18+ years old
            </label>

            <button
              onClick={start}
              disabled={!canStart}
              style={{ ...btnPrimary, opacity: canStart ? 1 : .5, cursor: canStart ? "pointer" : "not-allowed", marginTop:6 }}
              aria-disabled={!canStart}
            >
              Start Video Chat
            </button>

            <div style={{ marginTop:10, display:"flex", justifyContent:"center", gap:16, fontSize:13, opacity:.9 }}>
              <a href="/legal/terms" style={textLink}>Terms of Use</a>
              <span style={{ opacity:.4 }}>•</span>
              <a href="/legal/privacy" style={textLink}>Privacy Policy</a>
            </div>
          </div>
        </div>
      </section>
    </main>
  );
}

/* helpers */
function linkBtn(kind: "solid" | "ghost"): React.CSSProperties {
  if (kind === "solid") {
    return {
      display:"inline-flex", alignItems:"center", gap:8, padding:"8px 12px",
      background:"#ffffff1a", border:"1px solid #ffffff33", borderRadius:10,
      color:"#fff", fontWeight:700, textDecoration:"none",
    };
  }
  return {
    display:"inline-flex", alignItems:"center", gap:8, padding:"8px 10px",
    background:"transparent", border:"1px solid #ffffff40", borderRadius:10,
    color:"#fff", fontWeight:700, textDecoration:"none",
  };
}

const btnPrimary: React.CSSProperties = {
  display:"inline-flex", alignItems:"center", justifyContent:"center",
  padding:"12px 16px",
  background:"linear-gradient(180deg,#ff4d6d,#e91e63)",
  border:"1px solid rgba(255,255,255,.25)", borderRadius:12,
  color:"#fff", fontWeight:900, letterSpacing:.4, width:"100%",
};

const selectStyle: React.CSSProperties = {
  width:"100%", appearance:"none",
  background:"rgba(255,255,255,0.07)", border:"1px solid rgba(255,255,255,0.25)",
  borderRadius:10, padding:"10px 34px 10px 12px", color:"#fff", fontSize:14, outline:"none",
};

const textLink: React.CSSProperties = {
  color:"#fff", textDecoration:"underline", textUnderlineOffset:4,
  textDecorationColor:"rgba(255,255,255,.5)",
};
